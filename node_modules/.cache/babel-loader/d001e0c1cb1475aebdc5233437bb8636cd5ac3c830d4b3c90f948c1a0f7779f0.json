{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import Message from'./Message';import InputArea from'./InputArea';import Header from'./Header';import Footer from'./Footer';import TypingIndicator from'./TypingIndicator';import{sendMessage}from'../api/chatService';import'../styles/main.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatContainer=()=>{const[messages,setMessages]=useState([{content:\"Hello! I'm SecuTalk, your cybersecurity assistant. Ask me about phishing, passwords, or online safety.\",isBot:true}]);const[isTyping,setIsTyping]=useState(false);const[shouldFocusInput,setShouldFocusInput]=useState(true);const messagesEndRef=useRef(null);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});};useEffect(()=>{scrollToBottom();// Set focus on initial render\nsetShouldFocusInput(true);},[messages]);const handleSendMessage=async message=>{// Add user message\nsetMessages(prev=>[...prev,{content:message,isBot:false}]);setIsTyping(true);setShouldFocusInput(false);// Get response\nconst botResponse=await sendMessage(message);// Add bot response\nsetMessages(prev=>[...prev,{content:botResponse.response,isBot:true}]);setIsTyping(false);setShouldFocusInput(true);};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-area\",children:[messages.map((msg,index)=>/*#__PURE__*/_jsx(Message,{content:msg.content,isBot:msg.isBot},index)),isTyping&&/*#__PURE__*/_jsx(TypingIndicator,{}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsx(InputArea,{onSendMessage:handleSendMessage,disabled:isTyping,autoFocus:shouldFocusInput}),/*#__PURE__*/_jsx(Footer,{})]});};export default ChatContainer;","map":{"version":3,"names":["React","useState","useEffect","useRef","Message","InputArea","Header","Footer","TypingIndicator","sendMessage","jsx","_jsx","jsxs","_jsxs","ChatContainer","messages","setMessages","content","isBot","isTyping","setIsTyping","shouldFocusInput","setShouldFocusInput","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","message","prev","botResponse","response","className","children","map","msg","index","ref","onSendMessage","disabled","autoFocus"],"sources":["/home/dell/Documents/chatbot/secutalk-chatbot/src/components/ChatContainer.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Message from './Message';\nimport InputArea from './InputArea';\nimport Header from './Header';\nimport Footer from './Footer';\nimport TypingIndicator from './TypingIndicator';\nimport { sendMessage } from '../api/chatService';\nimport '../styles/main.css';\n\nconst ChatContainer = () => {\n  const [messages, setMessages] = useState([\n    { \n      content: \"Hello! I'm SecuTalk, your cybersecurity assistant. Ask me about phishing, passwords, or online safety.\", \n      isBot: true \n    }\n  ]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [shouldFocusInput, setShouldFocusInput] = useState(true);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n    // Set focus on initial render\n    setShouldFocusInput(true);\n  }, [messages]);\n\n  const handleSendMessage = async (message) => {\n    // Add user message\n    setMessages(prev => [...prev, { content: message, isBot: false }]);\n    setIsTyping(true);\n    setShouldFocusInput(false);\n\n    // Get response\n    const botResponse = await sendMessage(message);\n    \n    // Add bot response\n    setMessages(prev => [...prev, { \n      content: botResponse.response, \n      isBot: true \n    }]);\n    setIsTyping(false);\n    setShouldFocusInput(true);\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <Header />\n      <div className=\"message-area\">\n        {messages.map((msg, index) => (\n          <Message key={index} content={msg.content} isBot={msg.isBot} />\n        ))}\n        {isTyping && <TypingIndicator />}\n        <div ref={messagesEndRef} />\n      </div>\n      <InputArea \n        onSendMessage={handleSendMessage} \n        disabled={isTyping}\n        autoFocus={shouldFocusInput}\n      />\n      <Footer />\n    </div>\n  );\n};\n\nexport default ChatContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}