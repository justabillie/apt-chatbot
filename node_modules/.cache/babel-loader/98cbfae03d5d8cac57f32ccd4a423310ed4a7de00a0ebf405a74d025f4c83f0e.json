{"ast":null,"code":"import React from'react';import ReactMarkdown from'react-markdown';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Message=_ref=>{let{content,isBot}=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"message \".concat(isBot?'bot-message':'user-message'),children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:/*#__PURE__*/_jsx(ReactMarkdown,{children:content})}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-meta\",children:[isBot?'SecuTalk':'You',\" \\u2022 \",new Date().toLocaleTimeString([],{hour:'2-digit',minute:'2-digit'})]})]});};export default Message;","map":{"version":3,"names":["React","ReactMarkdown","jsx","_jsx","jsxs","_jsxs","Message","_ref","content","isBot","className","concat","children","Date","toLocaleTimeString","hour","minute"],"sources":["/home/dell/Documents/chatbot/secutalk-chatbot/src/components/Message.jsx"],"sourcesContent":["import React from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nconst Message = ({ content, isBot }) => {\n  return (\n    <div className={`message ${isBot ? 'bot-message' : 'user-message'}`}>\n      <div className=\"message-content\">\n        <ReactMarkdown>{content}</ReactMarkdown>\n      </div>\n      <div className=\"message-meta\">\n        {isBot ? 'SecuTalk' : 'You'} â€¢ {new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}\n      </div>\n    </div>\n  );\n};\n\nexport default Message;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,aAAa,KAAM,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3C,KAAM,CAAAC,OAAO,CAAGC,IAAA,EAAwB,IAAvB,CAAEC,OAAO,CAAEC,KAAM,CAAC,CAAAF,IAAA,CACjC,mBACEF,KAAA,QAAKK,SAAS,YAAAC,MAAA,CAAaF,KAAK,CAAG,aAAa,CAAG,cAAc,CAAG,CAAAG,QAAA,eAClET,IAAA,QAAKO,SAAS,CAAC,iBAAiB,CAAAE,QAAA,cAC9BT,IAAA,CAACF,aAAa,EAAAW,QAAA,CAAEJ,OAAO,CAAgB,CAAC,CACrC,CAAC,cACNH,KAAA,QAAKK,SAAS,CAAC,cAAc,CAAAE,QAAA,EAC1BH,KAAK,CAAG,UAAU,CAAG,KAAK,CAAC,UAAG,CAAC,GAAI,CAAAI,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,EAAE,CAAE,CAACC,IAAI,CAAE,SAAS,CAAEC,MAAM,CAAC,SAAS,CAAC,CAAC,EACnG,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAV,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}